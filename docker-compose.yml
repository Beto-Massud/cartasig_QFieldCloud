version: "3.7"

services:
  db:
    image: postgres:11
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  app:
    build:
      context: ./docker-app
    restart: unless-stopped
    command: gunicorn qfieldcloud.wsgi:application --bind 0.0.0.0:8000 -t 300
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles/
    environment:
      DJANGO_ALLOWED_HOSTS: ${QFIELDCLOUD_HOST}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: 0
      SQL_DATABASE: ${POSTGRES_DB}
      SQL_USER: ${POSTGRES_USER}
      SQL_PASSWORD: ${POSTGRES_PASSWORD}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
      AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME}
      AWS_S3_ENDPOINT_URL: ${AWS_S3_ENDPOINT_URL}
    depends_on:
      - db

  web:
    build:
      context: ./docker-caddy
    restart: unless-stopped
    environment:
      QFIELDCLOUD_HOST: ${QFIELDCLOUD_HOST}
      ACME_AGREE: "true"
    volumes:
      - static_volume:/home/app/web/staticfiles/
      - media_volume:/home/app/web/mediafiles/
      - caddy_data:/data
    ports:
      - 80:80
      - 443:443

  qgis:
    build:
      context: .
      dockerfile: ./docker-qgis/Dockerfile
      args:
        QGIS_VERSION: latest
    tty: true
    command: bash -c "echo QGIS builded"

  redis:
    image: redis:6.0.6
    restart: unless-stopped
    ports:
      - "6379:6379"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  caddy_data:
