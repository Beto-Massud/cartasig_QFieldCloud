* Repository of QFieldcloud server
** Infrastructure
   Based on this example
   https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/
*** Development
    Remote machine for development is on dev.qfield.cloud 78.47.109.156

    To build development images and run the containers:
    #+begin_src sh
      docker-compose up -d --build
    #+end_src

    It will read =docker-compose.yml= and =.env.dev= and start a
    django built-in server at http://localhost:8000
*** Production
    To build production images and run the containers:
    #+begin_src sh
      docker-compose -f docker-compose.prod.yml up -d --build
    #+end_src

    It will read =docker-compose.prod.yml=, =.env.prod= and
    =.env.prod.db= and start a nginx server at http://localhost:1337

    Prod has no mounted folders. To apply changes, the image must be re-built.
** Technological stack
*** Django
    LTS (2.2)
*** Django REST framework
*** Python "official" docker image
    https://hub.docker.com/_/python
    =3.8-buster=
    See [[https://pythonspeed.com/articles/base-image-python-docker-images/][here]] why not use the alpine-based one.
*** Postgres
    https://hub.docker.com/_/postgres
    By docker "official" image =11=, I still don't use the 12 because
    of some incompatibilites with QGIS (at the moment)
*** Nginx
    Docker =1.17.5-alpine=
*** Gunicorn
    =19.9.0=

