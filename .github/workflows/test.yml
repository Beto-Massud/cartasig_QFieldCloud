name: Test
on: push
jobs:
  test:
    name: Code check and tests
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Install pipenv dependencies
        run: |
          cd orchestrator
          pipenv install
      - name: Check code with Flake8
        run: |
          cd orchestrator
          pipenv run python -m flake8 --ignore=E501,F401,W503 --exclude "../.git/,../docker-qgis/qfieldsync/" ../
      - name: Create .env file from secret
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_DEBUG: 1
          envkey_QFIELDCLOUD_HOST: "localhost"
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_WEB_HTTP_PORT: 80
          envkey_WEB_HTTPS_PORT: 443
          envkey_POSTGRES_USER: "qfieldcloud_test_db_admin"
          envkey_POSTGRES_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          envkey_POSTGRES_DB: "qfieldcloud_test_db"
          envkey_HOST_POSTGRES_PORT: 5432
          envkey_DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
          envkey_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          envkey_AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          envkey_AWS_STORAGE_BUCKET_NAME: "qfieldcloud-test"
          envkey_AWS_S3_REGION_NAME: "zrh1"
          envkey_AWS_S3_ENDPOINT_URL: "https://os.zrh1.flow.swiss"
          envkey_REDIS_PASSWORD: "reeeeeedissssssss"
          envkey_REDIS_PORT: 6379
          envkey_GEODB_HOST: localhost
          envkey_GEODB_USER: postgres
          envkey_GEODB_PASSWORD: ${{ secrets.GEODB_PASSWORD }}
          envkey_GEODB_DB: postgres
          envkey_GEODB_PORT: 5433
          file_name: .env
      - name: Build and run docker containers
        run: |
          docker-compose up -d --build
      - name: Run RQ workers
        run: |
          cd orchestrator
          pipenv run python worker.py &
      - name: Run unit and integration tests
        run: |
          pwd
          docker-compose run app python manage.py test -v2 qfieldcloud

